{"version":3,"sources":["sw.js"],"names":["filesToCache","staticCacheName","self","addEventListener","event","console","log","skipWaiting","waitUntil","caches","open","then","cache","addAll","respondWith","match","request","response","fetch","put","url","clone","catch","error","options","registration","showNotification"],"mappings":";AAAA,IAAMA,EAAe,CACjB,IACA,uBACA,aACA,cACA,UAGEC,EAAkB,iBAGxBC,KAAKC,iBAAiB,UAAW,SAAAC,GAC7BC,QAAQC,IAAI,cACZJ,KAAKK,cAELH,EAAMI,UACFC,OAAOC,KAAKT,GAAiBU,KAAK,SAAAC,GACvBA,OAAAA,EAAMC,OAAOb,QAMhCE,KAAKC,iBAAiB,WAAY,SAAAC,GAASC,OAAAA,QAAQC,IAAI,gBAGvDJ,KAAKC,iBAAiB,QAAS,SAAAC,GAE3BA,EAAMU,YACFL,OACKM,MAAMX,EAAMY,SACZL,KAAK,SAAAM,GACEA,OAAAA,GAKGC,MAAMd,EAAMY,SAASL,KAAK,SAAAM,GAEtBR,OAAAA,OAAOC,KAAKT,GAAiBU,KAAK,SAAAC,GAE9BK,OADPL,EAAMO,IAAIf,EAAMY,QAAQI,IAAKH,EAASI,SAC/BJ,QAIlBK,MAAM,SAAAC,SAOnB,IAAIC,EAAU,GACdtB,KAAKC,iBAAiB,OAAQ,SAAAC,GAC1BA,OAAAA,EAAMI,UAAUN,KAAKuB,aAAaC,iBAAiB,QAASF","file":"sw.js","sourceRoot":"..\\..\\homey-frontend\\src","sourcesContent":["const filesToCache = [\r\n    '/',\r\n    'assets/css/reset.css',\r\n    'index.html',\r\n    'favicon.ico',\r\n    'app.js'\r\n]\r\n\r\nconst staticCacheName = 'pages-cache-v1'\r\n\r\n// Install the SW\r\nself.addEventListener('install', event => {\r\n    console.log('Insatalled')\r\n    self.skipWaiting()\r\n\r\n    event.waitUntil(\r\n        caches.open(staticCacheName).then(cache => {\r\n            return cache.addAll(filesToCache)\r\n        })\r\n    )\r\n})\r\n\r\n// Activate the SW\r\nself.addEventListener('activate', event => console.log('Activated '))\r\n\r\n// Listen for fetch\r\nself.addEventListener('fetch', event => {\r\n    // console.log('Fetch event for ', event.request.url)\r\n    event.respondWith(\r\n        caches\r\n            .match(event.request)\r\n            .then(response => {\r\n                if (response) {\r\n                    // console.log('Found ', event.request.url, ' in cache')\r\n                    return response\r\n                }\r\n                // console.log('Network request for ', event.request.url)\r\n                return fetch(event.request).then(response => {\r\n                    // TODO 5 - Respond with custom 404 page\r\n                    return caches.open(staticCacheName).then(cache => {\r\n                        cache.put(event.request.url, response.clone())\r\n                        return response\r\n                    })\r\n                })\r\n            })\r\n            .catch(error => {\r\n                // TODO 6 - Respond with custom offline page\r\n            })\r\n    )\r\n})\r\n\r\n// Listen for push\r\nvar options = {}\r\nself.addEventListener('push', event =>\r\n    event.waitUntil(self.registration.showNotification('Hello', options))\r\n)\r\n"]}